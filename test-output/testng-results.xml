<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-04-13T22:55:11 IST" name="Default suite" finished-at="2024-04-13T22:55:15 IST" duration-ms="4167">
    <groups>
    </groups>
    <test started-at="2024-04-13T22:55:11 IST" name="Default test" finished-at="2024-04-13T22:55:15 IST" duration-ms="4167">
      <class name="script.ValidLogin">
        <test-method is-config="true" signature="initReport()[pri:0, instance:script.ValidLogin@2b71e916]" started-at="2024-04-13T22:55:11 IST" name="initReport" finished-at="2024-04-13T22:55:11 IST" duration-ms="141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initReport -->
        <test-method is-config="true" signature="preCondition(java.lang.reflect.Method,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:script.ValidLogin@2b71e916]" started-at="2024-04-13T22:55:11 IST" name="preCondition" finished-at="2024-04-13T22:55:13 IST" duration-ms="1804" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void script.ValidLogin.testValidLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[CHROME]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[NO]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[http://localhost:4444]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preCondition -->
        <test-method signature="testValidLogin()[pri:1, instance:script.ValidLogin@2b71e916]" started-at="2024-04-13T22:55:13 IST" name="testValidLogin" finished-at="2024-04-13T22:55:13 IST" duration-ms="8" status="FAIL">
          <exception class="java.lang.Error">
            <message>
              <![CDATA[Unresolved compilation problems: 
XL_PATH cannot be resolved to a variable
XL_PATH cannot be resolved to a variable
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Error: Unresolved compilation problems: 
XL_PATH cannot be resolved to a variable
XL_PATH cannot be resolved to a variable

at script.ValidLogin.testValidLogin(ValidLogin.java:16)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Error -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method is-config="true" signature="postCondition(org.testng.ITestResult)[pri:0, instance:script.ValidLogin@2b71e916]" started-at="2024-04-13T22:55:13 IST" name="postCondition" finished-at="2024-04-13T22:55:15 IST" duration-ms="2332" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidLogin status=FAILURE method=ValidLogin.testValidLogin()[pri:1, instance:script.ValidLogin@2b71e916] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postCondition -->
        <test-method is-config="true" signature="publishReport()[pri:0, instance:script.ValidLogin@2b71e916]" started-at="2024-04-13T22:55:15 IST" name="publishReport" finished-at="2024-04-13T22:55:16 IST" duration-ms="174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- publishReport -->
      </class> <!-- script.ValidLogin -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
